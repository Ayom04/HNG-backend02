import request from 'supertest';
import app from '../app'; // Assuming your Express app is exported from app.ts
import { expect } from 'chai';

describe('POST /auth/register', () => {
  it('should register user successfully with default organisation', async () => {
    const userData = {
      firstName: 'John',
      lastName: 'Doe',
      email: 'john.doe@example.com',
      password: 'password123',
      phone: '1234567890'
    };

    const res = await request(app)
      .post('/auth/register')
      .send(userData)
      .expect(201);

    expect(res.body).to.have.property('status', 'success');
    expect(res.body).to.have.property('message', 'Registration successful');
    expect(res.body.data.user).to.have.property('userId');
    expect(res.body.data.user).to.have.property('firstName', 'John');
    // Add more assertions for default organisation creation
  });

  it('should fail if required fields are missing', async () => {
    const userData = {}; // Missing required fields

    const res = await request(app)
      .post('/auth/register')
      .send(userData)
      .expect(422);

    expect(res.body).to.have.property('status', 'Bad Request');
    expect(res.body).to.have.property('message', 'Validation failed');
    expect(res.body.errors).to.be.an('array').that.is.not.empty;
    // Add more specific assertions for each missing field
  });

  // Add more test cases as per your requirements
});
